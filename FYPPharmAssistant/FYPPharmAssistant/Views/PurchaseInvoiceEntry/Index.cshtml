@model FYPPharmAssistant.ViewModel.PurchaseInvoiceEntryViewModel
@using FYPPharmAssistant.ViewModel;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .myTextArea{
        width:800px;
    }
</style>

<h2 style="color:green">@ViewBag.SuccessMsg</h2>
<div id="divForm1">

    @using (Html.BeginForm("InsertIntoPurchase", "PurchaseInvoiceEntry", FormMethod.Post, new { @Id = "form1" }))
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-3">
                    <div>
                        <label>Supplier</label>
                        @Html.DropDownListFor(m => m.SelectedSupplierValue, Model.ChooseSupplier, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SelectedSupplierValue, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div>
                        <label>PurchaseID:</label>
                        @Html.EditorFor(model => model.PurchaseID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model=>model.PurchaseID,"", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div>
                        <label>Date</label>
                        @Html.EditorFor(model => model.InvocingDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="col-md-3">
                    <div>
                        <label>Amount</label>
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control autoCalc", @id = "txtAmount" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <label>Discount</label>
                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control autoCalc" , @id="txtDiscount"} })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label>Tax</label>
                    @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control autoCalc", @id = "txtTax" } })
                    @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
                 </div>
                <div class="col-md-3">
                    <label>Grand Total</label>
                    @Html.EditorFor(model => model.GrandTotal, new { htmlAttributes = new { @class = "form-control autoCalc", @id = "txtGrandTotal"} })
                    @Html.ValidationMessageFor(model => model.GrandTotal, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <label>Payment</label><br />
                    @Html.CheckBoxFor(model => model.IsPaid) <text>IsPaid</text>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <label>Remarks</label>
                    @Html.TextAreaFor(model => model.Remarks, htmlAttributes: new { @class = "form-control myTextArea", placeholder = "Write something" })
                </div>
            </div>

            <input type="button" id="btnSaveAndAdd" value="Save and Add" />
            
        }
    </div>
    <hr />
    <!--********************************************
        ******************Form 2********************
        ********************************************-->
<label id="setInvoiceIdHere"></label>
    <div id="divForm2">
        @using (Html.BeginForm(new { @id = "SecondForm" }))
        {
            <div class="row">
                <div class="col-md-4">
                    <label>Item Name</label>
                    @Html.DropDownListFor(m => m.SelectedItemvalue, Model.ChooseItem, htmlAttributes: new { @class = "form-control", @name = "Item" })
                    @Html.ValidationMessageFor(model => model.ChooseItem, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    <label>Batch</label>
                    @Html.EditorFor(model => model.BatchNo, new { htmlAttributes = new { @class = "form-control", @name = "BatchNo" } })
                    @Html.ValidationMessageFor(model => model.BatchNo, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    <label>Qty</label>
                    @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control", @name = "Qty" } })
                    @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <label>Cost Price</label>
                    @Html.EditorFor(model => model.CostPrice, new { htmlAttributes = new { @class = "form-control", @name = "CostPrice" } })
                    @Html.ValidationMessageFor(model => model.CostPrice, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4">
                    <label>Selling Price</label>
                    @Html.EditorFor(model => model.SellingPrice, new { htmlAttributes = new { @class = "form-control", @name = "SellingPrice" } })
                    @Html.ValidationMessageFor(model => model.SellingPrice, "", new { @class = "text-danger"})
                </div>
                <div class="col-md-4">
                    <label>Expiry</label>
                    @Html.EditorFor(model => model.Expiry, new { htmlAttributes = new { @class = "form-control", @name = "Expiry" } })
                    @Html.ValidationMessageFor(model => model.Expiry, "", new { @class = "text-danger" })
                </div>
            </div>
            <input class="btn btn-warning" value="Add item to list" id="btnListPurchaseItems" />
        }
    </div>

<!--*****************************************************************
    **********************Show list here*****************************-->
<!--
    get all the data from form along with the invoice id 
    save in list
    and then bulk update       
-->


    <br /><br /><br />
    <button class="btn btn-primary"> Bulk Save Records</button>

    <script>
        $(document).on('ready', function () {
            //This will disable all the children of the div
          /*  var nodes = document.getElementById("divForm2").getElementsByTagName('*');
            for (var i = 0; i < nodes.length; i++) {
                nodes[i].disabled = true;
            }*/
        });

        $(function () {
            $("#btnSaveAndAdd").on('click', function () {
                $.post("InsertIntoPurchase", $('#form1').serialize(), function (data) {
                    if (data === "Invoice Number Already exists!")
                    {
                        alert(data);
                    }
                    else
                    {
                        //sets ID to the placeholder
                        $("#setInvoiceIdHere").text(data);
                        //disable form1
                        var nodes = document.getElementById("divForm1").getElementsByTagName('*');
                        for (var i = 0; i < nodes.length; i++) {
                            nodes[i].disabled = true;
                        }
                        //enable form2
                        var nodes = document.getElementById("divForm2").getElementsByTagName('*');
                        for (var i = 0; i < nodes.length; i++)
                        {
                            nodes[i].disabled = false;
                        }
                    }
                }, 'json');
                console.log($("#form1").serialize());
                return false;
            });
        });

        //Working with form2     



        $('#btnListPurchaseItems').on('click', function () {
            console.log((JSON.stringify($('#SecondForm').serialize())));
            event.preventDefault();
        });
            

           
           /* $('#btnListPurchaseItems').on('click', function () {
                var myList = JSON.stringify($('#form2').serializeObject());
                console.log(myList);
            });*/
         
           // (JSON.stringify($('form').serializeObject())
    </script>
